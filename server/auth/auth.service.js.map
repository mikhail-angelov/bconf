{"version":3,"sources":["auth/auth.service.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAI,cAAc,0BAAW;AAC3B,UAAQ,gBAAO,OAAP,CAAe,OAAf;CADQ,CAAd;;;;;;AAQJ,SAAS,eAAT,GAA2B;AACzB,SAAO;;GAEJ,GAFI,CAEA,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;;AAE5B,QAAI,IAAI,KAAJ,IAAa,IAAI,KAAJ,CAAU,cAAV,CAAyB,cAAzB,CAAb,EAAuD;AACzD,UAAI,OAAJ,CAAY,aAAZ,GAA4B,YAAY,IAAI,KAAJ,CAAU,YAAV,CADiB;KAA3D;AAGA,gBAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,EAL4B;GAAzB;;AAFA,GAUJ,GAVI,CAUA,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;;AAE1B,QAAG,IAAI,IAAJ,CAAS,IAAT,KAAkB,OAAlB,EAA0B;AAC3B,aAD2B;KAA7B,MAEM;AACJ,qBAAK,aAAL,CAAmB,IAAI,IAAJ,CAAS,GAAT,CAAnB,CACK,IADL,CACU,UAAU,IAAV,EAAgB;AACpB,YAAI,CAAC,IAAD,EAAO;AACT,iBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,GAAhB,EAAP,CADS;SAAX;AAGA,YAAI,IAAJ,GAAW,IAAX,CAJoB;AAKpB,eALoB;OAAhB,CADV,CAQK,KARL,CAQW,UAAU,GAAV,EAAe;AACpB,eAAO,KAAK,GAAL,CAAP,CADoB;OAAf,CARX,CADI;KAFN;GAFC,CAVP,CADyB;CAA3B;;;;;AAkCA,SAAS,OAAT,CAAiB,YAAjB,EAA+B;AAC7B,MAAI,CAAC,YAAD,EAAe;AACjB,UAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN,CADiB;GAAnB;;AAIA,SAAO,sCACJ,GADI,CACA,iBADA,EAEJ,GAFI,CAEA,SAAS,iBAAT,CAA2B,GAA3B,EAAgC,GAAhC,EAAqC,IAArC,EAA2C;AAC9C,QAAI,gBAAO,SAAP,CAAiB,OAAjB,CAAyB,IAAI,IAAJ,CAAS,IAAT,CAAzB,IACA,gBAAO,SAAP,CAAiB,OAAjB,CAAyB,YAAzB,CADA,EACwC;AAC1C,aAD0C;KAD5C,MAIK;AACH,UAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,WAArB,EADG;KAJL;GADG,CAFP,CAL6B;CAA/B;;;;;AAqBA,SAAS,SAAT,CAAmB,EAAnB,EAAuB,IAAvB,EAA6B;AAC3B,SAAO,uBAAI,IAAJ,CAAS,EAAE,KAAK,EAAL,EAAS,MAAM,IAAN,EAApB,EAAkC,gBAAO,OAAP,CAAe,OAAf,EAAwB;AAC/D,eAAW,IAAX;GADK,CAAP,CAD2B;CAA7B;;;;;AASA,SAAS,cAAT,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC;AAChC,MAAI,CAAC,IAAI,IAAJ,EAAU;AACb,WAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,yCAArB,CAAP,CADa;GAAf;AAGA,MAAI,QAAQ,UAAU,IAAI,IAAJ,CAAS,GAAT,EAAc,IAAI,IAAJ,CAAS,IAAT,CAAhC,CAJ4B;AAKhC,MAAI,MAAJ,CAAW,OAAX,EAAoB,KAApB,EALgC;AAMhC,MAAI,QAAJ,CAAa,GAAb,EANgC;CAAlC;;AASA,QAAQ,eAAR,GAA0B,eAA1B;AACA,QAAQ,OAAR,GAAkB,OAAlB;AACA,QAAQ,SAAR,GAAoB,SAApB;AACA,QAAQ,cAAR,GAAyB,cAAzB","file":"auth/auth.service.js","sourcesContent":["'use strict';\n\nimport passport from 'passport';\nimport config from '../config/environment/index';\nimport jwt from 'jsonwebtoken';\nimport expressJwt from 'express-jwt';\nimport compose from 'composable-middleware';\nimport User from '../api/user/user.model';\nvar validateJwt = expressJwt({\n  secret: config.secrets.session\n});\n\n/**\n * Attaches the user object to the request if authenticated\n * Otherwise returns 403\n */\nfunction isAuthenticated() {\n  return compose()\n    // Validate jwt\n    .use(function(req, res, next) {\n      // allow access_token to be passed through query parameter as well\n      if (req.query && req.query.hasOwnProperty('access_token')) {\n        req.headers.authorization = 'Bearer ' + req.query.access_token;\n      }\n      validateJwt(req, res, next);\n    })\n    // Attach user to request\n    .use(function(req, res, next) {\n        //todo refactor it\n        if(req.user.role === 'guest'){\n          next();\n        }else {\n          User.findByIdAsync(req.user._id)\n              .then(function (user) {\n                if (!user) {\n                  return res.status(401).end();\n                }\n                req.user = user;\n                next();\n              })\n              .catch(function (err) {\n                return next(err);\n              });\n        }\n    });\n}\n\n/**\n * Checks if the user role meets the minimum requirements of the route\n */\nfunction hasRole(roleRequired) {\n  if (!roleRequired) {\n    throw new Error('Required role needs to be set');\n  }\n\n  return compose()\n    .use(isAuthenticated())\n    .use(function meetsRequirements(req, res, next) {\n      if (config.userRoles.indexOf(req.user.role) >=\n          config.userRoles.indexOf(roleRequired)) {\n        next();\n      }\n      else {\n        res.status(403).send('Forbidden');\n      }\n    });\n}\n\n/**\n * Returns a jwt token signed by the app secret\n */\nfunction signToken(id, role) {\n  return jwt.sign({ _id: id, role: role }, config.secrets.session, {\n    expiresIn: '2d'\n  });\n}\n\n/**\n * Set token cookie directly for oAuth strategies\n */\nfunction setTokenCookie(req, res) {\n  if (!req.user) {\n    return res.status(404).send('Something went wrong, please try again.');\n  }\n  var token = signToken(req.user._id, req.user.role);\n  res.cookie('token', token);\n  res.redirect('/');\n}\n\nexports.isAuthenticated = isAuthenticated;\nexports.hasRole = hasRole;\nexports.signToken = signToken;\nexports.setTokenCookie = setTokenCookie;\n"],"sourceRoot":"/source/"}