{"version":3,"sources":["api/chat/chat.model.js"],"names":[],"mappings":"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","file":"api/chat/chat.model.js","sourcesContent":["'use strict';\n\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\nvar Schema = mongoose.Schema;\n\nimport util from '../../components/util/index';\nimport _ from 'lodash';\nimport q from 'q';\n\n\nvar ChatSchema = new Schema({\n    name: String,\n    chatId: String,\n    userId: String\n});\n\nChatSchema.statics.create = function (chat) {\n    let chatId = util.randomId()\n    let chats = _.map(chat.list, userId=> {\n        return {\n            name: chat.name,\n            userId: userId.toString(),\n            chatId\n        }\n    });\n    console.log('chats', chats);\n\n    let deferred = q.defer();\n    this.collection.insert(chats, function onInsert(err, docs) {\n        if (err) {\n            console.log('error', err);\n            deferred.reject(err);\n        } else {\n            deferred.resolve();\n        }\n    });\n    return deferred.promise;\n};\n\nChatSchema.statics.getUserChats = function (userId){\n    return this.findAsync({userId: userId.toString()})\n    .then(chats=>{\n            let chatIds = _.map(chats,chat=>chat.chatId)\n            return this.findAsync({'chatId':{$in:chatIds}});\n        })\n    .then(chats=>{\n            return _.reduce(chats,(acc,chat)=>{\n                let chatId = chat.chatId;\n                acc[chatId] = acc[chatId] || {};\n                acc[chatId].name = chat.name;\n                acc[chatId].chatId = chatId;\n                acc[chatId].list = acc[chatId].list || [];\n                acc[chatId].list.push(chat.userId);\n                return acc;\n            },{});\n        });\n};\n\nChatSchema.statics.addChatUser = function(chatId, userId){\n    return this.findAsync({chatId:chatId})\n    .then(chats=>{\n            if(!chats || chats.length == 0 || _.find(chats,{userId:userId})) return null;\n            else {\n                let newChat = new Chat({\n                    chatId:chatId.toString(),\n                    name:chats[0].name,\n                    userId: userId.toString()\n                });\n                return newChat.saveAsync();\n            }\n        })\n};\n\nChatSchema.statics.removeChatUser = function(chatId, userId){\n    return this.findOneAndRemoveAsync({chatId:chatId.toString(), userId:userId.toString()});\n};\n\nexport var Chat = mongoose.model('Chat', ChatSchema)\nexport default Chat\n"],"sourceRoot":"/source/"}