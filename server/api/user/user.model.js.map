{"version":3,"sources":["api/user/user.model.js"],"names":[],"mappings":"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","file":"api/user/user.model.js","sourcesContent":["'use strict';\n\nimport crypto from 'crypto';\n//var mongoose = require('bluebird').promisifyAll(require('mongoose'));\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nvar authTypes = ['github', 'twitter', 'facebook', 'google'];\nvar _ = require('lodash');\n\nvar UserSchema = new Schema({\n    name: String,\n    email: {\n        type: String,\n        lowercase: true\n    },\n    role: {\n        type: String,\n        default: 'user'\n    },\n    password: String,\n    provider: String,\n    salt: String,\n    facebook: {},\n    twitter: {},\n    google: {},\n    yandex: {},\n    github: {},\n    avatar: String,\n    contacts: []\n});\n\nlet contactStatus = {\n    BUDDY: 'buddy',\n    BOT: 'bot',\n    REQUEST: 'request',\n    PENDING: 'pending'\n}\n\n/**\n * Virtuals\n */\n\n// Public profile information\nUserSchema\n    .virtual('profile')\n    .get(function () {\n        return {\n            'name': this.name,\n            'role': this.role\n        };\n    });\n\n// Non-sensitive info we'll be putting in the token\nUserSchema\n    .virtual('token')\n    .get(function () {\n        return {\n            '_id': this._id,\n            'role': this.role\n        };\n    });\n\nUserSchema\n    .virtual('contactInfo')\n    .get(function () {\n        return {\n            '_id': this._id,\n            'name': this.name,\n            'email': this.email,\n            'avatar': this.avatar\n        };\n    });\n\n/**\n * Validations\n */\n\n// Validate empty email\nUserSchema\n    .path('email')\n    .validate(function (email) {\n        if (authTypes.indexOf(this.provider) !== -1) {\n            return true;\n        }\n        return email.length;\n    }, 'Email cannot be blank');\n\n// Validate empty password\nUserSchema\n    .path('password')\n    .validate(function (password) {\n        if (authTypes.indexOf(this.provider) !== -1) {\n            return true;\n        }\n        return password.length;\n    }, 'Password cannot be blank');\n\n// Validate email is not taken\nUserSchema\n    .path('email')\n    .validate(function (value, respond) {\n        var self = this;\n        return this.constructor.findOne({email: value})\n            .then(function (user) {\n                if (user) {\n                    if (self.id === user.id) {\n                        return respond(true);\n                    }\n                    return respond(false);\n                }\n                return respond(true);\n            })\n            //.catch(function (err) {\n            //    throw err;\n            //});\n    }, 'The specified email address is already in use.');\n\nvar validatePresenceOf = function (value) {\n    return value && value.length;\n};\n\n/**\n * Pre-save hook\n */\nUserSchema\n    .pre('save', function (next) {\n        // Handle new/update passwords\n        if (this.isModified('password')) {\n            if (!validatePresenceOf(this.password) && authTypes.indexOf(this.provider) === -1) {\n                next(new Error('Invalid password'));\n            }\n\n            // Make salt with a callback\n            var _this = this;\n            this.makeSalt(function (saltErr, salt) {\n                if (saltErr) {\n                    next(saltErr);\n                }\n                _this.salt = salt;\n                _this.encryptPassword(_this.password, function (encryptErr, hashedPassword) {\n                    if (encryptErr) {\n                        next(encryptErr);\n                    }\n                    _this.password = hashedPassword;\n                    next();\n                });\n            });\n        } else {\n            next();\n        }\n    });\n\n/**\n * Methods\n */\nUserSchema.methods = {\n    /**\n     * Authenticate - check if the passwords are the same\n     *\n     * @param {String} password\n     * @param {Function} callback\n     * @return {Boolean}\n     * @api public\n     */\n    authenticate: function (password, callback) {\n        if (!callback) {\n            return this.password === this.encryptPassword(password);\n        }\n\n        var _this = this;\n        this.encryptPassword(password, function (err, pwdGen) {\n            if (err) {\n                callback(err);\n            }\n\n            if (_this.password === pwdGen) {\n                callback(null, true);\n            }\n            else {\n                callback(null, false);\n            }\n        });\n    },\n\n    /**\n     * Make salt\n     *\n     * @param {Number} byteSize Optional salt byte size, default to 16\n     * @param {Function} callback\n     * @return {String}\n     * @api public\n     */\n    makeSalt: function (byteSize, callback) {\n        var defaultByteSize = 16;\n\n        if (typeof arguments[0] === 'function') {\n            callback = arguments[0];\n            byteSize = defaultByteSize;\n        }\n        else if (typeof arguments[1] === 'function') {\n            callback = arguments[1];\n        }\n\n        if (!byteSize) {\n            byteSize = defaultByteSize;\n        }\n\n        if (!callback) {\n            return crypto.randomBytes(byteSize).toString('base64');\n        }\n\n        return crypto.randomBytes(byteSize, function (err, salt) {\n            if (err) {\n                callback(err);\n            }\n            return callback(null, salt.toString('base64'));\n        });\n    },\n\n    /**\n     * Encrypt password\n     *\n     * @param {String} password\n     * @param {Function} callback\n     * @return {String}\n     * @api public\n     */\n    encryptPassword: function (password, callback) {\n        if (!password || !this.salt) {\n            return null;\n        }\n\n        var defaultIterations = 10000;\n        var defaultKeyLength = 64;\n        var salt = new Buffer(this.salt, 'base64');\n\n        if (!callback) {\n            return crypto.pbkdf2Sync(password, salt, defaultIterations, defaultKeyLength)\n                .toString('base64');\n        }\n\n        return crypto.pbkdf2(password, salt, defaultIterations, defaultKeyLength, function (err, key) {\n            if (err) {\n                callback(err);\n            }\n            return callback(null, key.toString('base64'));\n        });\n    }\n};\n\nUserSchema.statics.addContact = function (id, contactId, invitation) {\n    let owner;\n    let userToAdd;\n\n\n    return this.findById(id)\n        .then(user => {\n            owner = user;\n            if (_.findIndex(owner.contacts, {id: contactId}) < 0) {\n                let contacts = owner.contacts.push({id: contactId, status: contactStatus.PENDING});\n                return owner.save()\n            }\n        })\n        .then(()=>this.findById(contactId))\n        .then(user => {\n            userToAdd = user;\n            if (_.findIndex(userToAdd.contacts, {id: id}) < 0) {\n                let contacts = userToAdd.contacts.push({id: id, status: contactStatus.REQUEST, invitation});\n                return userToAdd.save()\n            }\n        });\n};\n\nUserSchema.statics.acceptContact = function (userId, contactId) {\n    return this.findById(userId)\n        .then((owner) => {\n            let contactIndex = _.findIndex(owner.contacts, {id: contactId});\n            console.log('get1 ', owner, contactIndex)\n            if (contactIndex >= 0 && owner.contacts[contactIndex].status === contactStatus.REQUEST) {\n                owner.contacts[contactIndex].status = contactStatus.BUDDY;\n                owner.contacts = _.clone(owner.contacts)\n                console.log('get2 ', owner)\n\n                return this.update({\"_id\":userId,\"contacts.id\" : contactId}, {\"$set\" : {\"contacts.$.status\" : contactStatus.BUDDY}})\n                //return owner.save();\n            } else {\n                return (false);\n            }\n        })\n        .then((process)=> {\n            console.log('get3 ', process)\n            return process ? this.findById(contactId) : process;\n        })\n        .then((userToAdd) => {\n            if (userToAdd) {\n                let contactIndex = _.findIndex(userToAdd.contacts, {id: userId});\n                if (contactIndex >= 0) {\n                    //userToAdd.contacts[contactIndex].status = contactStatus.BUDDY;\n\n                    //var item =  userToAdd.contacts.id(userId);\n                    //item.status = contactStatus.BUDDY;\n\n                    console.log('get4 ', userToAdd)\n\n                    return this.update({\"_id\":contactId,\"contacts.id\" : userId}, {\"$set\" : {\"contacts.$.status\" : contactStatus.BUDDY}})\n\n                 //   return userToAdd.save();\n                }\n            }\n        })\n        .then((u)=> {\n            console.log('get5 ', u)\n            return this.find();\n        })\n        .then((u)=> {\n            console.log('get6 ', u)\n            return u;\n        });\n};\n\nUserSchema.statics.removeContact = function (id, contactId) {\n    console.log('remove', id, contactId)\n    return this.findOne({_id: id})\n        .then(user => {\n            let index = _.findIndex(user.contacts, {id: contactId});\n            if (index >= 0) {\n                user.contacts.splice(index, 1);\n            }\n            return user.save();\n        });\n};\n\nUserSchema.statics.getContacts = function (id) {\n    let result = []\n    return this.findOne({_id: id})\n        .then(user=> {\n            result = user.contacts;\n            let ids = _.map(user.contacts, 'id');\n            return this.where('_id').in(ids)\n        })\n        .then(contacts=> {\n            let infos = _.reduce(contacts, (acc, contact)=> {\n                acc[contact._id.toString()] = contact.contactInfo;\n                return acc;\n            }, {});\n            console.log(infos)\n            return _.map(result, item=>_.extend(item, infos[item.id]))\n        });\n};\n\nUserSchema.statics.validateUser = function (id, token) {\n    //todo: check user credentials\n    return true;\n};\nUserSchema.statics.isConnectionAllowed = function (src, dest) {\n    //todo: do proper validation\n    return true;\n};\n\n\n//module.exports = mongoose.model('User', UserSchema);\n\nexport var User = mongoose.model('User', UserSchema)\nexport default User\n"],"sourceRoot":"/source/"}