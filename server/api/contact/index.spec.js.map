{"version":3,"sources":["api/contact/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAb;;AAEJ,IAAI,kBAAkB;AACpB,SAAO,mBAAP;AACA,WAAS,qBAAT;AACA,OAAK,iBAAL;AACA,eAAa,yBAAb;CAJE;;AAOJ,IAAI,kBAAkB;AACpB,mBAAiB,2BAAW;AAC1B,WAAO,6BAAP,CAD0B;GAAX;AAGjB,WAAS,iBAAS,IAAT,EAAe;AACtB,WAAO,yBAAyB,IAAzB,CADe;GAAf;CAJP;;AASJ,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EAAL;AACA,OAAK,MAAM,GAAN,EAAL;AACA,QAAM,MAAM,GAAN,EAAN;AACA,UAAQ,MAAM,GAAN,EAAR;CAJE;;;AAQJ,IAAI,eAAe,WAAW,SAAX,EAAsB;AACvC,aAAW;AACT,YAAQ,kBAAW;AACjB,aAAO,UAAP,CADiB;KAAX;GADV;AAKA,0BAAwB,eAAxB;AACA,6BAA2B,eAA3B;CAPiB,CAAf;;AAUJ,SAAS,qBAAT,EAAgC,YAAW;;AAEzC,KAAG,0CAAH,EAA+C,YAAW;AACxD,iBAAa,MAAb,CAAoB,KAApB,CAA0B,UAA1B,EADwD;GAAX,CAA/C,CAFyC;;AAMzC,WAAS,mBAAT,EAA8B,YAAW;;AAEvC,OAAG,4DAAH,EAAiE,YAAW;AAC1E,iBAAW,GAAX,CACG,QADH,CACY,GADZ,EACiB,6BADjB,EACgD,mBADhD,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CAD0E;KAAX,CAAjE,CAFuC;GAAX,CAA9B,CANyC;;AAgBzC,WAAS,0BAAT,EAAqC,YAAW;;AAE9C,OAAG,8DAAH,EAAmE,YAAW;AAC5E,iBAAW,MAAX,CACG,QADH,CACY,MADZ,EACoB,6BADpB,EACmD,qBADnD,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CAD4E;KAAX,CAAnE,CAF8C;GAAX,CAArC,CAhByC;;AA0BzC,WAAS,2BAAT,EAAsC,YAAW;;AAE/C,OAAG,6DAAH,EAAkE,YAAW;AAC3E,iBAAW,IAAX,CACG,QADH,CACY,SADZ,EACuB,0BADvB,EACmD,iBADnD,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CAD2E;KAAX,CAAlE,CAF+C;GAAX,CAAtC,CA1ByC;;AAoCzC,WAAS,gCAAT,EAA2C,YAAW;;AAEpD,OAAG,qEAAH,EAA0E,YAAW;AACnF,iBAAW,IAAX,CACG,QADH,CACY,cADZ,EAC4B,6BAD5B,EAC2D,yBAD3D,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADmF;KAAX,CAA1E,CAFoD;GAAX,CAA3C,CApCyC;CAAX,CAAhC","file":"api/contact/index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar contactCtrlStub = {\n  index: 'contactCtrl.index',\n  destroy: 'contactCtrl.destroy',\n  add: 'contactCtrl.add',\n  createGuest: 'contactCtrl.createGuest'\n};\n\nvar authServiceStub = {\n  isAuthenticated: function() {\n    return 'authService.isAuthenticated';\n  },\n  hasRole: function(role) {\n    return 'authService.hasRole.' + role;\n  }\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar contactIndex = proxyquire('./index', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './contact.controller': contactCtrlStub,\n  '../../auth/auth.service': authServiceStub\n});\n\ndescribe('Contact API Router:', function() {\n\n  it('should return an express router instance', function() {\n    contactIndex.should.equal(routerStub);\n  });\n\n  describe('GET /api/contacts', function() {\n\n    it('should be authenticated and route to user.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'authService.isAuthenticated', 'contactCtrl.index')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/contacts/:id', function() {\n\n    it('should be authenticated and route to user.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'authService.isAuthenticated', 'contactCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/contacts/invite', function() {\n\n    it('should be authenticated and route to contact.controller.add', function() {\n      routerStub.post\n        .withArgs('/invite', 'authService.hasRole.user', 'contactCtrl.add')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/contacts/createGuest', function() {\n\n    it('should be authenticated and route to contact.controller.createGuest', function() {\n      routerStub.post\n        .withArgs('/createGuest', 'authService.isAuthenticated', 'contactCtrl.createGuest')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n\n});\n"],"sourceRoot":"/source/"}