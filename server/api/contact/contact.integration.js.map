{"version":3,"sources":["api/contact/contact.integration.js"],"names":[],"mappings":"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","file":"api/contact/contact.integration.js","sourcesContent":["'use strict';\n\nimport application from '../../index';\nimport User from '../user/user.model';\nimport request from 'supertest';\nimport testDb from '../../test/testDb.js'\n\nlet app = application.app;\n\ndescribe('Contact API:', function () {\n\n    // Clear users before testing\n    before(function () {\n        return testDb.init()\n            .then(()=>User.addContact(testDb.user._id, testDb.otherUser._id))\n            .then(()=> {\n                console.log('users are added')\n                return User.findOneAsync({email: 'test@example.com'})\n                    .then(user=>console.log('user', user))\n            });\n\n    });\n\n    // Clear users after testing\n    after(function () {\n        return testDb.reset();\n    });\n\n    describe('GET /api/contacts', function () {\n        var token;\n\n        before(function (done) {\n            request(app)\n                .post('/auth/local')\n                .send({\n                    email: 'test@example.com',\n                    password: 'password'\n                })\n                .expect(200)\n                .expect('Content-Type', /json/)\n                .end(function (err, res) {\n                    token = res.body.token;\n                    done();\n                });\n        });\n\n        it('should respond with list of contacts when authenticated', function (done) {\n            request(app)\n                .get('/api/contacts')\n                .set('authorization', 'Bearer ' + token)\n                .expect(200)\n                .expect('Content-Type', /json/)\n                .end(function (err, res) {\n                    var contacts = res.body;\n                    contacts.length.should.be.equal(1);\n                    contacts[0]._id.toString().should.be.equal(testDb.otherUser._id.toString());\n                    done();\n                });\n        });\n\n        it('should respond with a 401 when not authenticated', function (done) {\n            request(app)\n                .get('/api/contacts')\n                .expect(401)\n                .end(done);\n        });\n\n        it('should find list of contacts when authenticated', function (done) {\n            request(app)\n                .get('/api/contacts/search?text=Other')\n                .set('authorization', 'Bearer ' + token)\n                .expect(200)\n                .expect('Content-Type', /json/)\n                .end(function (err, res) {\n                    var contacts = res.body;\n                    contacts.length.should.be.equal(1);\n                    contacts[0]._id.toString().should.be.equal(testDb.otherUser._id.toString());\n                    done();\n                });\n        });\n\n        describe('guest request', function (done) {\n            var guestToken;\n\n            before(function (done) {\n                request(app)\n                    .post('/auth/local/guest')\n                    .send({})\n                    .expect(200)\n                    .expect('Content-Type', /json/)\n                    .end(function (err, res) {\n                        guestToken = res.body.token;\n                        done();\n                    });\n            });\n\n\n            it('should respond with list of robots for guest', function (done) {\n                request(app)\n                    .get('/api/contacts')\n                    .set('authorization', 'Bearer ' + guestToken)\n                    .expect(200)\n                    .expect('Content-Type', /json/)\n                    .end(function (err, res) {\n                        var contacts = res.body;\n                        console.log('contacts',contacts)\n                        contacts.length.should.be.gt(1);\n                        contacts[0].name.toString().should.be.equal('Echo');\n                        done();\n                    });\n            });\n        });\n    });\n});\n"],"sourceRoot":"/source/"}