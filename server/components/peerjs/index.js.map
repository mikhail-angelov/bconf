{"version":3,"sources":["components/peerjs/index.js"],"names":[],"mappings":"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","file":"components/peerjs/index.js","sourcesContent":["'strict mode';\n\n\n//origin server code is here https://github.com/peers/peerjs-server.git\n\nclass PeerJs {\n\n  constructor(bus, session, User) {\n    this.session = session;\n    this.eventBus = bus;\n    this.user = User;\n\n    this.eventBus.on(this.eventBus.SOCKET_CLOSED, client => this.onClose(client))\n    this.eventBus.on(this.eventBus.SOCKET_ERROR, (client, err)=>this.onError(client, err))\n    this.eventBus.on(this.eventBus.SOCKET_MESSAGE, (client, data) => this.onMessage(client, data))\n    this.eventBus.on(this.eventBus.NEW_CONNECTION, client => this.onNewConnection(client))\n\n  }\n\n  onNewConnection (client) {\n\n    if (this.session.getById(client.id)) {\n      // ID-taken, invalid token\n      console.log('ID-taken', client.id)\n      this.eventBus.emit(this.eventBus.SEND_MESSAGE, client, {type: 'ID-TAKEN', payload: {msg: 'ID is taken'}});\n      this.eventBus.emit(this.eventBus.DISCONNECT_CLIENT, client);\n    } else {\n      //check auth\n      if (this.user.validateUser(client.id, client.token)) {\n        this.session.add(client);\n        this.eventBus.emit(this.eventBus.ACCEPT_CLIENT, client);\n      } else {\n        console.log('user credentials are invalid', client.id, client.token)\n        this.eventBus.emit(this.eventBus.SEND_MESSAGE, client, {\n          type: 'INCORRECT-TOKEN',\n          payload: {msg: 'incorrect token'}\n        });\n        this.eventBus.emit(this.eventBus.DISCONNECT_CLIENT, client);\n      }\n    }\n  }\n\n  onClose(client) {\n    console.log('client Socket closed:', client.id);\n    this.session.delete(client);\n  }\n\n  onError(client, err) {\n    console.log('client Socket error:', client.id, err);\n    this.eventBus.emit(this.eventBus.SEND_MESSAGE, client, {type: 'ERROR', payload: {msg: err}});\n  }\n\n  onMessage(client, data) {\n    try {\n      console.log(data)\n      var message = JSON.parse(data);\n\n      if (message && message.type && ['LEAVE', 'CANDIDATE', 'OFFER', 'ANSWER'].indexOf(message.type) !== -1 ) {\n        var type = message.type;\n        var src = message.src;\n        var dst = message.dst;\n\n        if(this.user.isConnectionAllowed(src, dst)) {\n          var destinationClient = this.session.getById(dest);\n          // User is connected!\n          if (destinationClient) {\n            try {\n              console.log('send message to ' + dst);\n              this.eventBus.emit(this.eventBus.SEND_MESSAGE, destinationClient, data);\n            } catch (e) {\n              // This happens when a peer disconnects without closing connections and\n              // the associated WebSocket has not closed.\n              // Tell other side to stop trying.\n              console.log('peer is disconnected do something', e);\n              //this._removePeer(key, dst);\n              //this._handleTransmission(key, {\n              //  type: 'LEAVE',\n              //  src: dst,\n              //  dst: src\n              //});\n            }\n          } else {\n            // Wait for this client to connect/reconnect (XHR) for important\n            // messages.\n            if (type !== 'LEAVE' && type !== 'EXPIRE' && dst) {\n              console.log('peer is absent do something');\n              //var self = this;\n              //if (!this._outstanding[key][dst]) {\n              //  this._outstanding[key][dst] = [];\n              //}\n              //this._outstanding[key][dst].push(message);\n            } else if (type === 'LEAVE' && !dst) {\n              //this._removePeer(key, src);\n              console.log('clean up list');\n              //_clients[src]=null;\n            } else {\n              // Unavailable destination specified with message LEAVE or EXPIRE\n              // Ignore\n            }\n          }\n        }\n\n      } else {\n        console.log('unrecognized (no peerjs message)', data);\n      }\n    } catch (e) {\n      console.log('Invalid message', data, e);\n      //throw e;\n    }\n  }\n\n}\n\nexport default PeerJs;\n\n"],"sourceRoot":"/source/"}