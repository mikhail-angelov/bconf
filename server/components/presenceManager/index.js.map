{"version":3,"sources":["components/presenceManager/index.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,8BAAR,CAAP;;AAEJ,IAAI,IAAI,QAAQ,QAAR,CAAJ;AACJ,IAAI,oBAAoB,IAApB;;AAEJ,SAAS,IAAT,CAAc,EAAd,EAAkB;AAChB,sBAAoB,EAApB,CADgB;CAAlB;;AAIA,SAAS,aAAT,CAAuB,QAAvB,EAAiC;;AAE/B,MAAI,UAAU,EAAC,MAAM,UAAN,EAAkB,SAAS,EAAC,QAAQ,QAAR,EAAkB,QAAQ,QAAR,EAA5B,EAA7B,CAF2B;AAG/B,qBAAmB,QAAnB,EAA6B,OAA7B,EAH+B;CAAjC;;AAMA,SAAS,gBAAT,CAA0B,QAA1B,EAAoC;;AAElC,MAAI,UAAU,EAAC,MAAM,UAAN,EAAkB,SAAS,EAAC,QAAQ,QAAR,EAAkB,QAAQ,SAAR,EAA5B,EAA7B,CAF8B;AAGlC,qBAAmB,QAAnB,EAA6B,OAA7B,EAHkC;CAApC;;AAMA,SAAS,kBAAT,CAA4B,QAA5B,EAAsC,OAAtC,EAA+C;AAC7C,OAAK,UAAL,CAAgB,QAAhB,EAA0B,IAA1B,CAA+B,UAAU,OAAV,EAAmB;AAChD,QAAI,gBAAgB,EAAhB,CAD4C;AAEhD,YAAQ,OAAR,CAAgB,UAAU,MAAV,EAAkB;AAChC,UAAI,SAAS,kBAAkB,SAAlB,CAA4B,OAAO,EAAP,CAArC,CAD4B;AAEhC,UAAI,MAAJ,EAAY;AACV,sBAAc,IAAd,CAAmB,MAAnB,EADU;OAAZ;KAFc,CAAhB,CAFgD;AAQhD,kBAAc,OAAd,CAAsB,UAAU,MAAV,EAAkB;AACtC,cAAQ,GAAR,CAAY,sBAAsB,QAAtB,GAAiC,MAAjC,GAA0C,OAAO,EAAP,CAAtD,CADsC;AAEtC,aAAO,WAAP,CAAmB,KAAK,SAAL,CAAe,OAAf,CAAnB,EAFsC;KAAlB,CAAtB,CARgD;GAAnB,CAA/B,CAD6C;CAA/C;;AAiBA,OAAO,OAAP,GAAiB;AACf,QAAM,IAAN;AACA,iBAAe,aAAf;AACA,oBAAkB,gBAAlB;CAHF","file":"components/presenceManager/index.js","sourcesContent":["var User = require('../../api/user/user.model.js');\n//var logger = require('../logger');\nvar _ = require('lodash');\nvar connectionManager = null;\n\nfunction init(cm) {\n  connectionManager = cm;\n}\n\nfunction peerConnected(clientId) {\n  //logger.info('client ' + clientId + ' is online');\n  var message = {type: 'PRESENCE', payload: {userId: clientId, status: 'online'}};\n  _broadcastPresence(clientId, message);\n}\n\nfunction peerDisconnected(clientId) {\n  //logger.info('client ' + clientId + ' is offline');\n  var message = {type: 'PRESENCE', payload: {userId: clientId, status: 'offline'}};\n  _broadcastPresence(clientId, message);\n}\n\nfunction _broadcastPresence(clientId, message) {\n  User.getFriends(clientId).then(function (friends) {\n    var activeFriends = [];\n    friends.forEach(function (friend) {\n      var client = connectionManager.getClient(friend.id);\n      if (client) {\n        activeFriends.push(client);\n      }\n    });\n    activeFriends.forEach(function (friend) {\n      console.log('try to send form ' + clientId + ' to ' + friend.id);\n      friend.sendMessage(JSON.stringify(message));\n    });\n  });\n}\n\n\nmodule.exports = {\n  init: init,\n  peerConnected: peerConnected,\n  peerDisconnected: peerDisconnected\n};\n"],"sourceRoot":"/source/"}