{"version":3,"sources":["components/robots/robotMaster.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAIM;AAEF,aAFE,YAEF,CAAY,GAAZ,EAAiB;;;8BAFf,cAEe;;AACb,aAAK,IAAL,GAAY,EAAZ,CADa;AAEb,aAAK,QAAL,GAAgB,GAAhB,CAFa;AAGb,aAAK,QAAL,CAAc,EAAd,CAAiB,KAAK,QAAL,CAAc,cAAd,EAA8B,UAAC,MAAD,EAAS,OAAT;mBAAmB,MAAK,QAAL,CAAc,MAAd,EAAsB,OAAtB;SAAnB,CAA/C,CAHa;;AAKb,YAAI,OAAO,mBAAgB,IAAhB,CAAP,CALS;AAMb,YAAI,OAAO,2BAAwB,IAAxB,CAAP,CANS;KAAjB;;iBAFE;;iCAWO,KAAK;AACV,iBAAK,IAAL,CAAU,IAAI,EAAJ,CAAV,GAAoB,GAApB,CADU;;;;iCAIL,QAAQ,MAAM;AACnB,gBAAI;AACA,wBAAQ,GAAR,CAAY,IAAZ,EADA;AAEA,oBAAI,UAAU,KAAK,KAAL,CAAW,IAAX,CAAV,CAFJ;AAGA,oBAAI,WAAW,QAAQ,GAAR,EAAa;AACxB,wBAAI,MAAM,KAAK,IAAL,CAAU,QAAQ,GAAR,CAAhB,CADoB;AAExB,wBAAI,GAAJ,EAAS;AACL,4BAAI,QAAJ,CAAa,MAAb,EAAqB,OAArB,EADK;qBAAT;iBAFJ;aAHJ,CASE,OAAO,CAAP,EAAU;AACR,wBAAQ,GAAR,CAAY,uBAAZ,EAAqC,IAArC,EAA2C,CAA3C,EADQ;aAAV;;;;6BAKD,QAAQ,SAAS;AAClB,iBAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,QAAL,CAAc,YAAd,EAA4B,MAA/C,EAAuD,OAAvD,EADkB;;;;iCAIb;AACL,mBAAO,iBAAE,GAAF,CAAM,KAAK,IAAL,EAAW,UAAC,GAAD,EAAQ;AAC5B,uBAAO;AACH,0BAAM,IAAI,IAAJ;AACN,wBAAI,IAAI,EAAJ;AACJ,0BAAM,IAAI,IAAJ;AACN,4BAAQ,IAAI,MAAJ;iBAJZ,CAD4B;aAAR,CAAxB,CADK;;;;WAlCP;;;kBA8CS","file":"components/robots/robotMaster.js","sourcesContent":["import _ from 'lodash'\nimport echoFactory from './echo.js'\nimport yaTranslatorFactory from './yaTranslator.js'\n\nclass RobotManager {\n\n    constructor(bus) {\n        this.bots = {};\n        this.eventBus = bus;\n        this.eventBus.on(this.eventBus.SOCKET_MESSAGE, (client, message)=>this.dispatch(client, message));\n\n        let echo = new echoFactory(this);\n        let yatr = new yaTranslatorFactory(this)\n    }\n\n    register(bot) {\n        this.bots[bot.id] = bot;\n    }\n\n    dispatch(client, data) {\n        try {\n            console.log(data)\n            var message = JSON.parse(data);\n            if (message && message.bot) {\n                let bot = this.bots[message.bot];\n                if (bot) {\n                    bot.dispatch(client, message);\n                }\n            }\n        } catch (e) {\n            console.log('Invalid robot message', data, e);\n        }\n    }\n\n    send(client, message) {\n        this.eventBus.emit(this.eventBus.SEND_MESSAGE, client, message);\n    }\n\n    getAll() {\n        return _.map(this.bots, (bot)=> {\n            return {\n                type: bot.type,\n                id: bot.id,\n                name: bot.name,\n                avatar: bot.avatar\n            };\n        });\n    }\n}\n\nexport default RobotManager;"],"sourceRoot":"/source/"}